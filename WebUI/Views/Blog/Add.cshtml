@model Blog
@{
    ViewData["Title"] = "Add";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<div class="page-header">
    <h3 class="page-title">Yeni Blog Ekle</h3>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Blog/BlogListByWriter">Bloglarım</a></li>
            <li class="breadcrumb-item active" aria-current="page">Yeni Blog</li>
        </ol>
    </nav>
</div>
<div class="col-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            @using (Html.BeginForm("Add", "Blog", FormMethod.Post))
            {
                <div class="form-group">
                    @Html.Label("Blog Resmi")
                    @Html.TextBoxFor(x => x.Image, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Image, "", new { @style = "Color:red" })
                </div>
                <div class="form-group">
                    @Html.Label("Kategori")
                    @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.category, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.Label("Blog Başlığı")
                    @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Title, "", new { @style = "Color:red" })
                </div>
                <div class="form-group">
                    @Html.Label("Blog İçeriği")
                    @Html.TextAreaFor(x => x.Content, 10, 3, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Content, "", new { @style = "Color:red" })
                </div>
                <div style="text-align:center">
                    <button type="submit" class="btn btn-primary btn-rounded btn-fw mr-2" style="">Kaydet</button>
                </div>
            }
        </div>
    </div>
</div>